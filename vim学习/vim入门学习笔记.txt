通过解决问题的方式来学习vim

问题1：
必须熟练掌握编辑窗口的移动与布局


问题1：
 文件相关的操作（已解决）
 答：参考下面的命令

问题2：
 块整体右移或左移
 答（？）：可以使用ctrl+q进行列操作，使用>可以右移一个tab，但是怎么控制右移空格数目前还不知道

问题3：
 有没有如UE的列操作的方法
 答(?)：有，但是目前还没有完全摸清楚

问题4：
 怎么解决vim显示乱码的问题
 答：通过设置编码，但是能不能和预期的一致，还值得验证，可以参照help

问题5：
 怎么解决vim设置为永久设置的问题
 答：直接在_vimrc中进行设置即为永久保存

问题6：
 在使用帮助文档的时候怎么进行后退，及再次回到刚刚阅览的地方
 答：问题已经解决

问题7：
 怎么拷贝一份vim帮助文档

问题8：
 怎么在vim命令中打开一个新的vim窗口
 答：应该是没有必要再次打开一个vim进程的

问题9：
 有关书签的问题

问题10：
 对于正在阅读的帮助文档，怎么记录当前的位置及帮助文档的buffer
 答：不需要记录，只需要在文件中切换就行

问题11：
 修改窗口的大小的方法    
 答：
   resize +3<CR>
   resize -3<CR>
   vertical resize -3<CR>
   vertical resize +3<CR>
问题12：
 重复执行操作命令
 答：使用.

问题13：
 vim重装的方式，为了使用ruby
 答：可以编辑gvim.exe来匹配ruby的版本

问题14：
 在文件中快速切换的方法
 答：使用[:ls!]查看所有的命令，然后使用ctrl+^

问题15：
 光标的跳动操作
 答：使用ctrl+o和ctrl+i

问题16：
 编辑文件时，使其在新窗口中编辑的方法
 答：使用[:new file]命令进行编辑

问题17：
 使用使用宏定义，省去每次打开vim需要重复键入命令

问题18：
 设置英文菜单：
  let $LANG='en'
  set langemnu = en
 去掉菜单

问题19：
 vim中的寄存器理解


一、文件操作

1.使用vim新建文件
 [:new 文件名.后缀]
 

2.使用vim打开文件
 [:e 文件名]
 可以带文件路径，可以使用tab键进行文件夹名称的自动补全，可以多次按tab，直到找到
 需要的。这会在当前光标所在的窗口内打开文件。

 [vi flname1 flname2]
 可以同时打开多个文件，只打开一个文件时，操作结果和[:e]命令相同。

 [:split 文件]
 会将当前窗体分为多个区域，在新的区域打开文件
 
 [:在以上的操作命令前加tab 文件名]
 将在新的分页中打开文件


3.文件间的切换
 [:e#编号 或 Ctrl + w] Ctrl + w切换当前窗口中的不同区域的文件 [:ls 查看打开文件的文件列表和编号，然后使用:e#编号 切换到需要编辑的文件] 4.修改文件名称 [:f 新的文件名称] 5.修改当前操作目录 [:cd 目录路径]

二、编辑模式

1.移动光标
 （简单常见的操作说明自己省了，比如kjhl）
    space：光标右移一个字符  
    Backspace：光标左移一个字符  
    Enter ：光标下移一行  
    w或W ：光标右移一个字至字首  
    b或B ：光标左移一个字至字首  
    e或E ：光标右移一个字至字尾  
    ) ：光标移至句尾  
    ( ：光标移至句首  
    }：光标移至段落开头  
    {：光标移至段落结尾  
    n$：光标移至第n行尾  
    H ：光标移至屏幕顶行  
    M ：光标移至屏幕中间行  
    L ：光标移至屏幕最后行  
    0：（注意是数字零）光标移至当前行首  
    ^：移动光标到行首第一个非空字符上去  
    $：光标移至当前行尾  
    gg可以移到第一行  
    G移到最后一行  
    f<a>:移动光标到当前行的字符a上  
    F:相反  
    %：移动到与制匹配的括号上去（），{}，[]，<>等。  
    nG:移动到第n行上  
    G:到最后一行  
  
屏幕翻滚类命令：  
    Ctrl+u：向文件首翻半屏  
    Ctrl+d：向文件尾翻半屏  
    Ctrl+f：向文件尾翻一屏  
    Ctrl＋b：向文件首翻一屏  
    nz：将第n行滚至屏幕顶部，不指定n时将当前行滚至屏幕顶部

二、可视操作

1.v进入visual模式
2.V进入行的visual模式
3.Ctrl + v（gvim下为Ctrl + Q）进入块操作模式，用o和O改变选择的边的大小
4.复制粘贴使用方法
 Vim 有12个粘贴板依次编号为：0、1、2、...、9、a、"、+，
 其中 + 号为系统粘贴板，” 为临时粘贴板。
 系统剪切板中的内容可在其他程序中使用。
 上面的复制指令都可以配合剪切板进行操作。
 "nyw 复制当前单词到 n 号剪切板（双引号开始） 
 "np 粘贴 n 号剪切板内容到当前位置后 
 "+Y 复制当前行到系统剪切板
 "+ny 复制当前行加下面 n 行到系统剪切板
 "+p 粘贴系统剪切板内容到当前位置后

作者：whinc
链接：https://www.zhihu.com/question/19863631/answer/89354508
来源：知乎
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。

tab之间的切换
	
:tabnew [++opt选项] ［＋cmd］ 文件            建立对指定文件新的tab
:tabc       关闭当前的tab
:tabo       关闭所有其他的tab
:tabs       查看所有打开的tab
:tabp      前一个
:tabn      后一个
标准模式下：
gt , gT 可以直接在tab之间切换。
更多可以查看帮助 :help table ， help -p

一、vim重复命令的学习(比较难，延后再理解）
1.重复单个命令
2.重复多个命令
3.重复复杂命令

二、学习vim中的窗口管理相关的知识

三、vim中必须且非常必要的功能
 1.函数的进入，也就是函数的跳转
